-- =====================================================
-- Migration: V3__create_messages_table.sql
-- Description: Create messages table
-- =====================================================

-- Create message_type enum type
CREATE TYPE chat.message_type AS ENUM ('TEXT', 'FILE', 'IMAGE', 'SYSTEM');

-- Create messages table
CREATE TABLE IF NOT EXISTS chat.messages (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    conversation_id INT NOT NULL,
    sender_id INT NOT NULL,
    content TEXT NOT NULL,
    message_type chat.message_type NOT NULL DEFAULT 'TEXT',
    is_read BOOLEAN NOT NULL DEFAULT FALSE,
    read_at TIMESTAMP WITH TIME ZONE NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
    updated_at TIMESTAMP WITH TIME ZONE NULL,

    -- Foreign key constraints
    CONSTRAINT fk_messages_conversation FOREIGN KEY (conversation_id)
        REFERENCES chat.conversations(id) ON DELETE CASCADE,
    CONSTRAINT fk_messages_sender FOREIGN KEY (sender_id)
        REFERENCES chat.users(id) ON DELETE CASCADE
);

-- Create indexes for better query performance
CREATE INDEX idx_messages_conversation_id ON chat.messages(conversation_id);
CREATE INDEX idx_messages_conversation_created ON chat.messages(conversation_id, created_at DESC);
CREATE INDEX idx_messages_sender_id ON chat.messages(sender_id);
CREATE INDEX idx_messages_read_status ON chat.messages(conversation_id, is_read);
CREATE INDEX idx_messages_created_at ON chat.messages(created_at DESC);

-- Add comment
COMMENT ON TABLE chat.messages IS 'Stores individual messages in conversations';