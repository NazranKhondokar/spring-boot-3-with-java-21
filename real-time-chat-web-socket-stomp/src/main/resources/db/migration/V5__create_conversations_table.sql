-- =====================================================
-- Migration: V2__create_conversations_table.sql
-- Description: Create conversations table
-- =====================================================

-- Create conversation_status enum type
CREATE TYPE chat.conversation_status AS ENUM ('OPEN', 'ASSIGNED', 'CLOSED');

-- Create conversations table
CREATE TABLE IF NOT EXISTS chat.conversations (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id INT NOT NULL,
    super_admin_id INT NULL,
    status chat.conversation_status NOT NULL DEFAULT 'OPEN',
    last_message_at TIMESTAMP WITH TIME ZONE NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT (CURRENT_TIMESTAMP AT TIME ZONE 'UTC'),
    updated_at TIMESTAMP WITH TIME ZONE NULL,

    -- Foreign key constraints
    CONSTRAINT fk_conversations_customer FOREIGN KEY (customer_id)
        REFERENCES chat.users(id) ON DELETE CASCADE,
    CONSTRAINT fk_conversations_super_admin FOREIGN KEY (super_admin_id)
        REFERENCES chat.users(id) ON DELETE SET NULL
);

-- Create indexes for better query performance
CREATE INDEX idx_conversations_customer_id ON chat.conversations(customer_id);
CREATE INDEX idx_conversations_super_admin_id ON chat.conversations(super_admin_id);
CREATE INDEX idx_conversations_status ON chat.conversations(status);
CREATE INDEX idx_conversations_last_message_at ON chat.conversations(last_message_at DESC);
CREATE INDEX idx_conversations_customer_last_message ON chat.conversations(customer_id, last_message_at DESC);

-- Add comment
COMMENT ON TABLE chat.conversations IS 'Stores chat conversations between customers and super admins';